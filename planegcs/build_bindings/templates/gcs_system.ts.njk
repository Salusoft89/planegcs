export interface DoubleVector {
    get: (i: number) => number;
    size: () => number;
    delete: () => void;
}
export interface IntVector {
    get: (i: number) => number;
    size: () => number;
    delete: () => void;
}

{%- for cls in geom_classes -%}
{% if cls.base %}
export interface {{ cls.name }} extends {{ cls.base }} {}
{%- else %}
export interface {{ cls.name }} {
    delete: () => void;
}
{%- endif %}
{%- endfor %}

export type GcsGeometry = {% for cls in geom_classes %}{{ cls.name }}{% if not loop.last %} | {% endif %}{% endfor %};

{% for enum in enums %}
export enum {{ enum.name }} {
    {% for value in enum.values -%}
        {{ value.name }} = {{ value.value }},
    {% endfor -%}
}
{% endfor -%}

export interface GcsSystem {
{% for func in fn_ts_bindings %}
    {{ func.fname }}: ({{ func.args }}) => {{ func.return_type }};
{%- endfor %}
    delete: () => void;
}