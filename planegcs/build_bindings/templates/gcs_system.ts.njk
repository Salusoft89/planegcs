export interface DoubleVector {
    get: (i: number) => number;
    size: () => number;
    delete: () => void;
}
export interface IntVector {
    get: (i: number) => number;
    size: () => number;
    delete: () => void;
}
export interface Curve {}
export interface Point {}
export interface Line {}
export interface Arc {}
export interface Circle {}
export interface Ellipse {}
export interface Hyperbola {}
export interface Parabola {}
export interface BSpline {}
export interface ArcOfParabola {}
export interface ArcOfHyperbola {}
export interface ArcOfEllipse {}

{% for enum in enums %}
export enum {{ enum.name }} {
    {% for value in enum.values -%}
        {{ value.name }} = {{ value.value }},
    {% endfor -%}
}
{% endfor -%}

export interface GcsSystem {
{% for func in fn_ts_bindings %}
    {{ func.fname }}: ({{ func.args }}) => {{ func.return_type }};
{%- endfor %}
    delete: () => void;
}