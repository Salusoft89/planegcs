// This library provides WebAssembly bindings for the FreeCAD's geometric solver library planegcs.
// Copyright (C) 2023  Miroslav Šerý, Salusoft89 <miroslav.sery@salusoft89.cz>  
// Copyright (C) 2023  Jiří Hon, Salusoft89 <jiri.hon@salusoft89.cz>  

// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.

// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.

// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

export interface DoubleVector {
    get: (i: number) => number;
    size: () => number;
    delete: () => void;
}
export interface IntVector {
    get: (i: number) => number;
    size: () => number;
    delete: () => void;
}

{%- for cls in geom_classes -%}
{% if cls.base %}
export interface {{ cls.name }} extends {{ cls.base }} {}
{%- else %}
export interface {{ cls.name }} {
    delete: () => void;
}
{%- endif %}
{%- endfor %}

export type GcsGeometry = {% for cls in geom_classes %}{{ cls.name }}{% if not loop.last %} | {% endif %}{% endfor %};

{% for enum in enums %}
export enum {{ enum.name | replace('::', '_') }} {
    {% for value in enum.values -%}
        {{ value.name }} = {{ value.value }},
    {% endfor -%}
}
{% endfor -%}

export interface GcsSystem {
{% for func in fn_ts_bindings %}
    {{ func.fname }}: ({{ func.args }}) => {{ func.return_type }};
{%- endfor %}
    delete: () => void;
}